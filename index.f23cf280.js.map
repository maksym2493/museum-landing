{"mappings":"ACEA,IAAM,EAAW,SAAS,gBAAgB,CAAC,YACrC,EAAY,SAAS,gBAAgB,CAAC,qBAiB5C,SAAS,EAAoB,CAAK,EAChC,IAAM,EAAU,EAAM,MAAM,CAEtB,EAAc,AADL,EAAQ,kBAAkB,CACd,gBAAgB,CAAC,iBAEtC,EAAc,EAAQ,qBAAqB,GAE3C,EAAc,EAAY,IAAI,CAAG,AAAoB,IAApB,EAAY,KAAK,CAClD,EAAe,EAAY,IAAI,CAAG,AAAoB,IAApB,EAAY,KAAK,CAIzD,AAFsB,EAAQ,gBAAgB,CAAC,mBAEjC,OAAO,CAAC,SAAC,CAAA,CAAO,CAA9B,EACE,IAAM,EAAY,EAAM,qBAAqB,GAEvC,EAAY,EAAU,IAAI,CAC1B,EAAa,EAAU,KAAK,CAE5B,EAAW,CAAW,CAAC,EAAM,CAAC,SAAS,CAAC,QAAQ,CACpD,uBAGE,CAAA,EAAY,GAAgB,EAAa,EACtC,GACH,CAAW,CAAC,EAAM,CAAC,SAAS,CAAC,GAAG,CAAC,wBAG/B,GACF,CAAW,CAAC,EAAM,CAAC,SAAS,CAAC,MAAM,CAAC,uBAG1C,EACF,CAEA,SAAS,KACP,AAlDF,WACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAiB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAjB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA2B,CAC9B,IAAM,EAAU,AADb,EAAA,KAAA,CACqB,aAAa,CAAC,qBAChC,EAAe,CAAA,CAAA,AAAwB,GAAvB,EAAQ,YAAY,AAAG,EAAM,CAEnD,CAAA,EAAQ,KAAK,CAAC,YAAY,CAAG,GAAgB,MAAA,CAAb,EAAa,KAC/C,C,C,M,E,CALK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAMP,IAGE,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAoB,CAAE,OAAQ,CAAQ,EACxC,EAwCF,CAEA,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAQ,gBAAgB,CAAC,SAAU,EACrC,GAEA,IACA,OAAO,gBAAgB,CAAC,SAAU","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar lectures = document.querySelectorAll(\".lecture\");\nvar galleries = document.querySelectorAll(\".gallery__content\");\nfunction updateLectureMarginBottom() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = lectures[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var lecture = _step.value;\n            var content = lecture.querySelector(\".lecture__content\");\n            var marginBottom = -content.offsetHeight * 0.5 + 2;\n            content.style.marginBottom = \"\".concat(marginBottom, \"px\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction updateGalleryActiveImages() {\n    galleries.forEach(function(gallery) {\n        checkImageInGallery({\n            target: gallery\n        });\n    });\n}\nfunction checkImageInGallery(event) {\n    var gallery = event.target;\n    var slider = gallery.nextElementSibling;\n    var sliderItems = slider.querySelectorAll(\".slider__item\");\n    var galleryRect = gallery.getBoundingClientRect();\n    var galleryLeft = galleryRect.left + galleryRect.width * 0.25;\n    var galleryRight = galleryRect.left + galleryRect.width * 0.75;\n    var galleryImages = gallery.querySelectorAll(\".gallery__image\");\n    galleryImages.forEach(function(image, index) {\n        var imageRect = image.getBoundingClientRect();\n        var imageLeft = imageRect.left;\n        var imageRight = imageRect.right;\n        var isInView = sliderItems[index].classList.contains(\"slider__item--active\");\n        if (imageLeft < galleryRight && imageRight > galleryLeft) {\n            if (!isInView) sliderItems[index].classList.add(\"slider__item--active\");\n        } else if (isInView) sliderItems[index].classList.remove(\"slider__item--active\");\n    });\n}\nfunction onResize() {\n    updateLectureMarginBottom();\n    updateGalleryActiveImages();\n}\ngalleries.forEach(function(gallery) {\n    gallery.addEventListener(\"scroll\", checkImageInGallery);\n});\nonResize();\nwindow.addEventListener(\"resize\", onResize);\n\n//# sourceMappingURL=index.f23cf280.js.map\n","'use strict';\n\nconst lectures = document.querySelectorAll('.lecture');\nconst galleries = document.querySelectorAll('.gallery__content');\n\nfunction updateLectureMarginBottom() {\n  for (const lecture of lectures) {\n    const content = lecture.querySelector('.lecture__content');\n    const marginBottom = -content.offsetHeight * 0.5 + 2;\n\n    content.style.marginBottom = `${marginBottom}px`;\n  }\n}\n\nfunction updateGalleryActiveImages() {\n  galleries.forEach((gallery) => {\n    checkImageInGallery({ target: gallery });\n  });\n}\n\nfunction checkImageInGallery(event) {\n  const gallery = event.target;\n  const slider = gallery.nextElementSibling;\n  const sliderItems = slider.querySelectorAll('.slider__item');\n\n  const galleryRect = gallery.getBoundingClientRect();\n\n  const galleryLeft = galleryRect.left + galleryRect.width * 0.25;\n  const galleryRight = galleryRect.left + galleryRect.width * 0.75;\n\n  const galleryImages = gallery.querySelectorAll('.gallery__image');\n\n  galleryImages.forEach((image, index) => {\n    const imageRect = image.getBoundingClientRect();\n\n    const imageLeft = imageRect.left;\n    const imageRight = imageRect.right;\n\n    const isInView = sliderItems[index].classList.contains(\n      'slider__item--active',\n    );\n\n    if (imageLeft < galleryRight && imageRight > galleryLeft) {\n      if (!isInView) {\n        sliderItems[index].classList.add('slider__item--active');\n      }\n    } else {\n      if (isInView) {\n        sliderItems[index].classList.remove('slider__item--active');\n      }\n    }\n  });\n}\n\nfunction onResize() {\n  updateLectureMarginBottom();\n  updateGalleryActiveImages();\n}\n\ngalleries.forEach((gallery) => {\n  gallery.addEventListener('scroll', checkImageInGallery);\n});\n\nonResize();\nwindow.addEventListener('resize', onResize);\n"],"names":["lectures","document","querySelectorAll","galleries","checkImageInGallery","event","gallery","target","sliderItems","slider","nextElementSibling","galleryRect","getBoundingClientRect","galleryLeft","left","width","galleryRight","galleryImages","forEach","image","index","imageRect","imageLeft","imageRight","right","isInView","classList","contains","add","remove","onResize","updateLectureMarginBottom","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","content","lecture","value","querySelector","marginBottom","offsetHeight","style","concat","err","return","addEventListener","window"],"version":3,"file":"index.f23cf280.js.map"}